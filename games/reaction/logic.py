"""
–°–µ—Ä–≤—ñ—Å–Ω–∏–π —à–∞—Ä –¥–ª—è –≥—Ä–∏ –Ω–∞ —Ä–µ–∞–∫—Ü—ñ—é.

–Ü–Ω–∫–∞–ø—Å—É–ª—é—î –≤—Å—é –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫—É –≥—Ä–∏: –∞–Ω—ñ–º–∞—Ü—ñ—é, –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω–æ–º,
–≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è —á–∞—Å—É —Ç–∞ –≤–∑–∞—î–º–æ–¥—ñ—é –∑ FSM.
"""
import asyncio
import random
import time
from typing import final

from aiogram import Bot
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramAPIError
from aiogram.fsm.context import FSMContext

from config import logger
from games.reaction.keyboards import create_reaction_game_keyboard
from games.reaction.states import ReactionGameState

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó –≥—Ä–∏
LIGHTS_OFF = "‚ö´Ô∏è"
LIGHTS_RED = "üî¥"
LIGHTS_GREEN = "üü¢"
SEPARATOR = " "

@final
class ReactionGameLogic:
    """
    –ö–µ—Ä—É—î –ø–æ–≤–Ω–∏–º —ñ–≥—Ä–æ–≤–∏–º —Ü–∏–∫–ª–æ–º –≥—Ä–∏ –Ω–∞ —Ä–µ–∞–∫—Ü—ñ—é "–°–≤—ñ—Ç–ª–æ—Ñ–æ—Ä".
    """

    def __init__(self, bot: Bot, state: FSMContext, chat_id: int, message_id: int):
        self._bot = bot
        self._state = state
        self._chat_id = chat_id
        self._message_id = message_id

    async def start_game(self) -> None:
        """
        –ó–∞–ø—É—Å–∫–∞—î —ñ–≥—Ä–æ–≤–∏–π —Ü–∏–∫–ª: –∞–Ω—ñ–º–∞—Ü—ñ—è "—Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞" —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —á–∞—Å—É.
        """
        try:
            # –§–∞–∑–∞ 1: –ê–Ω—ñ–º–∞—Ü—ñ—è —á–µ—Ä–≤–æ–Ω–∏—Ö –≤–æ–≥–Ω—ñ–≤
            await self._run_countdown_animation()

            # –§–∞–∑–∞ 2: –í–∏–ø–∞–¥–∫–æ–≤–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
            # –¶–µ –∫–ª—é—á–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è —à–∞—Ö—Ä–∞–π—Å—Ç–≤—É
            final_delay = random.uniform(0.7, 2.5)
            logger.debug(f"Game ({self._message_id}): Final delay before green light is {final_delay:.2f}s")
            await asyncio.sleep(final_delay)

            # –§–∞–∑–∞ 3: –ó–µ–ª–µ–Ω–µ —Å–≤—ñ—Ç–ª–æ —Ç–∞ —Å—Ç–∞—Ä—Ç
            await self._show_green_light_and_start_timer()

        except TelegramAPIError as e:
            logger.error(
                f"Game ({self._message_id}): Telegram API error during game start sequence: {e}",
                exc_info=True
            )
            await self._cleanup_on_error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –≥—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        except Exception as e:
            logger.error(
                f"Game ({self._message_id}): Unexpected error in start_game: {e}",
                exc_info=True
            )
            await self._cleanup_on_error("–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞. –ì—Ä–∞ —Å–∫–∞—Å–æ–≤–∞–Ω–∞.")

    async def _run_countdown_animation(self) -> None:
        """
        –í–∏–∫–æ–Ω—É—î –∞–Ω—ñ–º–∞—Ü—ñ—é "–∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è" —á–µ—Ä–≤–æ–Ω–∏—Ö –≤–æ–≥–Ω—ñ–≤.
        """
        total_lights = 5
        for i in range(1, total_lights + 1):
            delay = random.uniform(0.5, 1.2)
            await asyncio.sleep(delay)

            lights_on = LIGHTS_RED * i
            lights_off = LIGHTS_OFF * (total_lights - i)
            text = f"–ü—Ä–∏–≥–æ—Ç—É–π—Å—è...!\n\n{SEPARATOR.join(list(lights_on + lights_off))}"
            
            await self._bot.edit_message_text(
                text=text,
                chat_id=self._chat_id,
                message_id=self._message_id
            )

    async def _show_green_light_and_start_timer(self) -> None:
        """
        –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –∑–µ–ª–µ–Ω–µ —Å–≤—ñ—Ç–ª–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î —á–∞—Å —Å—Ç–∞—Ä—Ç—É.
        """
        green_lights = SEPARATOR.join([LIGHTS_GREEN] * 5)
        text = f"–°–¢–ê–†–¢!\n\n{green_lights}"

        await self._bot.edit_message_text(
            text=text,
            chat_id=self._chat_id,
            message_id=self._message_id,
            reply_markup=create_reaction_game_keyboard()
        )
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω —Ç–∞ —Ñ—ñ–∫—Å—É—î–º–æ —Ç–æ—á–Ω–∏–π —á–∞—Å —Å—Ç–∞—Ä—Ç—É
        start_time = time.monotonic()
        await self._state.set_state(ReactionGameState.in_progress)
        await self._state.update_data(start_time=start_time, game_message_id=self._message_id)
        logger.info(f"Game ({self._message_id}): Timer started at {start_time}")

    async def _cleanup_on_error(self, error_text: str) -> None:
        """
        –ë–µ–∑–ø–µ—á–Ω–æ –∑–∞–≤–µ—Ä—à—É—î –≥—Ä—É —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏.
        """
        try:
            await self._bot.edit_message_text(
                text=error_text,
                chat_id=self._chat_id,
                message_id=self._message_id,
                reply_markup=None
            )
        except TelegramAPIError:
            logger.warning(f"Game ({self._message_id}): Could not edit message during cleanup.")
        finally:
            await self._state.clear()
