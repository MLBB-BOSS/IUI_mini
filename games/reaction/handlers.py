"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≥—Ä–∏ –Ω–∞ —Ä–µ–∞–∫—Ü—ñ—é.

–í–∏–∫–æ–Ω—É—é—Ç—å —Ä–æ–ª—å "–∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞", –ø—Ä–∏–π–º–∞—é—á–∏ –≤—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
—Ç–∞ –¥–µ–ª–µ–≥—É—é—á–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∏ —Å–µ—Ä–≤—ñ—Å–Ω–æ–º—É –∫–ª–∞—Å—É ReactionGameLogic.
"""
import asyncio
import time

from aiogram import Bot, F, Router
from aiogram.exceptions import TelegramAPIError
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from config import logger
from games.reaction.logic import ReactionGameLogic
from games.reaction.states import ReactionGameState
# TODO: –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
# from .crud import save_reaction_score

reaction_router = Router(name="reaction_game")


@reaction_router.message(Command("reaction", prefix="!/"))
async def start_reaction_game_handler(message: Message, bot: Bot, state: FSMContext):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /reaction. –ó–∞–ø—É—Å–∫–∞—î –≥—Ä—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    if not message.from_user:
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –Ω–µ –≤ –≥—Ä—ñ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤
    current_state = await state.get_state()
    if current_state is not None:
        await message.reply(
            "–í–∏ –≤–∂–µ –ø–µ—Ä–µ–±—É–≤–∞—î—Ç–µ –≤ –∞–∫—Ç–∏–≤–Ω—ñ–π –¥—ñ—ó. –ó–∞–≤–µ—Ä—à—ñ—Ç—å —ó—ó –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /cancel."
        )
        return

    try:
        # 1. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è-–∑–∞–≥–ª—É—à–∫—É
        game_message = await message.answer("üö¶ –ì—Ä–∞ –Ω–∞ —Ä–µ–∞–∫—Ü—ñ—é –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è...")
        
        # 2. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ª–æ–≥—ñ–∫—É –≥—Ä–∏
        game = ReactionGameLogic(
            bot=bot,
            state=state,
            chat_id=game_message.chat.id,
            message_id=game_message.message_id,
        )
        
        # 3. –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–≥—Ä–æ–≤–∏–π —Ü–∏–∫–ª —É —Ñ–æ–Ω–æ–≤–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ, —â–æ–± –Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ –±–æ—Ç–∞
        asyncio.create_task(game.start_game())
        logger.info(
            f"User {message.from_user.id} started a reaction game. "
            f"Message ID: {game_message.message_id}"
        )

    except TelegramAPIError as e:
        logger.error(f"Failed to send initial game message for user {message.from_user.id}: {e}")
        await message.reply("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ—á–∞—Ç–∏ –≥—Ä—É —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É Telegram. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
    except Exception as e:
        logger.error(f"Unexpected error on game start for user {message.from_user.id}: {e}", exc_info=True)
        await message.reply("–°—Ç–∞–ª–∞—Å—è –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –≥—Ä–∏.")


@reaction_router.callback_query(
    F.data == "reaction_game:stop",
    StateFilter(ReactionGameState.in_progress)
)
async def stop_reaction_game_handler(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """
    –û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–°–¢–û–ü", —Ñ—ñ–∫—Å—É—î —á–∞—Å —Ç–∞ –ø–æ–∫–∞–∑—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    """
    user_id = callback.from_user.id
    end_time = time.monotonic()
    
    data = await state.get_data()
    start_time = data.get("start_time")
    game_message_id = data.get("game_message_id")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—Å—ñ –¥–∞–Ω—ñ –Ω–∞ –º—ñ—Å—Ü—ñ
    if not all([start_time, game_message_id]):
        logger.warning(f"User {user_id} pressed stop, but state data is missing.")
        await callback.answer("–ü–æ–º–∏–ª–∫–∞: –¥–∞–Ω—ñ –≥—Ä–∏ –≤—Ç—Ä–∞—á–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É.", show_alert=True)
        await state.clear()
        return

    await state.clear()
    
    reaction_time_sec = end_time - start_time
    reaction_time_ms = int(reaction_time_sec * 1000)

    # –ë–∞–∑–æ–≤–∏–π –∞–Ω—Ç–∏-—á–∏—Ç
    if reaction_time_ms < 100:
        result_text = (
            f"‚è±Ô∏è –ß–∞—Å: {reaction_time_ms} –º—Å\n\n"
            "ü§î –§–∞–ª—å—Å—Ç–∞—Ä—Ç! –°—Ö–æ–∂–µ, —Ç–∏ –Ω–∞—Ç–∏—Å–Ω—É–≤ —â–µ –¥–æ –∑–µ–ª–µ–Ω–æ–≥–æ —Å–≤—ñ—Ç–ª–∞. "
            "–°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!"
        )
    else:
        # TODO: –Ü–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤ –ë–î
        # await save_reaction_score(user_id, reaction_time_ms)
        result_text = (
            f"üöÄ –¢–≤—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <b>{reaction_time_ms} –º—Å</b>!\n\n"
            "–ß—É–¥–æ–≤–∞ —Ä–µ–∞–∫—Ü—ñ—è! –°–ø—Ä–æ–±—É—î—à –ø–æ–±–∏—Ç–∏ —Å–≤—ñ–π —Ä–µ–∫–æ—Ä–¥?"
        )

    try:
        await bot.edit_message_text(
            text=result_text,
            chat_id=callback.message.chat.id,
            message_id=game_message_id,
            reply_markup=None, # –í–∏–¥–∞–ª—è—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ—Å–ª—è –≥—Ä–∏
        )
        await callback.answer(f"–í–∞—à —á–∞—Å: {reaction_time_ms} –º—Å", show_alert=False)
    except TelegramAPIError as e:
        # –ü–æ–º–∏–ª–∫–∞ –º–æ–∂–µ –≤–∏–Ω–∏–∫–Ω—É—Ç–∏, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–ª–æ –≤–∏–¥–∞–ª–µ–Ω–æ
        logger.warning(f"Could not edit game message {game_message_id} after completion: {e}")
        await callback.answer(f"–í–∞—à —á–∞—Å: {reaction_time_ms} –º—Å. –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.", show_alert=True)


def register_reaction_handlers(dp):
    """–†–µ—î—Å—Ç—Ä—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –≥—Ä–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –¥–∏—Å–ø–µ—Ç—á–µ—Ä—ñ."""
    dp.include_router(reaction_router)
    logger.info("‚úÖ –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≥—Ä–∏ 'Reaction Time' –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ.")
