import asyncio
import logging # –õ–æ–≥–µ—Ä —Ç–µ–ø–µ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –≤ config.py
import os
from datetime import datetime, timezone, timedelta

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.exceptions import TelegramAPIError # –ú–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –¥–ª—è main

# –Ü–º–ø–æ—Ä—Ç–∏ –∑ –ø—Ä–æ—î–∫—Ç—É
from config import TELEGRAM_BOT_TOKEN, ADMIN_USER_ID, logger # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ logger –∑ config
# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ —Å–∞–º –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
from handlers.general_handlers import register_general_handlers, error_handler as general_error_handler # –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤—É—î–º–æ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É —ñ–º–µ–Ω
from handlers.vision_handlers import register_vision_handlers
# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ cmd_go –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤ vision_handlers
from handlers.general_handlers import cmd_go


# –ì–æ–ª–æ–≤–Ω–∏–π –ª–æ–≥–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–∏ —Ç–µ–ø–µ—Ä –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –≤ config.py
# logger = logging.getLogger(__name__) # –¶–µ–π —Ä—è–¥–æ–∫ –±—ñ–ª—å—à–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ç—É—Ç

async def main() -> None:
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞."""
    bot_version = "v2.9.1 (—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –ø–æ–∫—Ä–∞—â–µ–Ω–∞ –æ–±—Ä–æ–±–∫–∞ HTML —Ç–∞ –ø–æ–º–∏–ª–æ–∫)" # –ú–æ–∂–Ω–∞ –≤–∏–Ω–µ—Å—Ç–∏ –≤ config
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ MLBB IUI mini {bot_version}... (PID: {os.getpid()})")

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    register_general_handlers(dp)
    # –ü–µ—Ä–µ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é cmd_go –≤ register_vision_handlers
    register_vision_handlers(dp, cmd_go_handler_func=cmd_go) 
    
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
    # –ü–µ—Ä–µ–¥–∞—î–º–æ bot —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫, —è–∫—â–æ –≤—ñ–Ω —Ç–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω
    # dp.errors.register(general_error_handler) # –¢–µ–ø–µ—Ä error_handler –ø—Ä–∏–π–º–∞—î bot
    # –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ lambda –∞–±–æ functools.partial, —è–∫—â–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏–π–º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
    # dp.errors.register(lambda update, exception: general_error_handler(update, exception, bot))
    # –ê–±–æ –∫—Ä–∞—â–µ, —è–∫—â–æ error_handler –∑–∞–≤–∂–¥–∏ –ø—Ä–∏–π–º–∞—î bot:
    @dp.errors()
    async def global_error_handler_wrapper(update_event, exception: Exception):
        # –¢–µ–ø–µ—Ä bot –¥–æ—Å—Ç—É–ø–Ω–∏–π –≤ —Ü—å–æ–º—É —Å–∫–æ—É–ø—ñ
        await general_error_handler(update_event, exception, bot)


    try:
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} (ID: {bot_info.id}) —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π!")
        if ADMIN_USER_ID != 0: # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ADMIN_USER_ID –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
            try:
                kyiv_tz = timezone(timedelta(hours=3))
                launch_time_kyiv = datetime.now(kyiv_tz).strftime('%Y-%m-%d %H:%M:%S %Z')
                admin_message = (
                    f"ü§ñ <b>MLBB IUI mini {bot_version} –∑–∞–ø—É—â–µ–Ω–æ!</b>\n\n"
                    f"üÜî @{bot_info.username}\n"
                    f"‚è∞ {launch_time_kyiv}\n"
                    f"üî© –ú–æ–¥–µ–ª—ñ: Vision: <code>gpt-4o-mini</code>, –¢–µ–∫—Å—Ç/–û–ø–∏—Å: <code>gpt-4.1</code> (–∂–æ—Ä—Å—Ç–∫–æ –∑–∞–¥–∞–Ω—ñ)\n"
                    f"üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É –æ–Ω–æ–≤–ª–µ–Ω–∞ (—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥).\n"
                    f"üü¢ –ì–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!"
                )
                await bot.send_message(ADMIN_USER_ID, admin_message, parse_mode=ParseMode.HTML)
                logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É ID: {ADMIN_USER_ID}")
            except Exception as e:
                logger.warning(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω—É (ID: {ADMIN_USER_ID}): {e}")

        logger.info("–†–æ–∑–ø–æ—á–∏–Ω–∞—é polling...")
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º (KeyboardInterrupt).")
    except TelegramAPIError as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ Telegram API –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –∞–±–æ —Ä–æ–±–æ—Ç–∏: {e}", exc_info=True)
    except Exception as e:
        logger.critical(f"–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –∞–±–æ —Ä–æ–±–æ—Ç–∏: {e}", exc_info=True)
    finally:
        logger.info("üõë –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞ —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ–π...")
        if bot.session and hasattr(bot.session, "close") and not bot.session.closed:
            try:
                await bot.session.close()
                logger.info("–°–µ—Å—ñ—é HTTP –∫–ª—ñ—î–Ω—Ç–∞ Bot –∑–∞–∫—Ä–∏—Ç–æ.")
            except Exception as e:
                logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó HTTP –∫–ª—ñ—î–Ω—Ç–∞ Bot: {e}", exc_info=True)
        
        # –¢—É—Ç –º–æ–∂–Ω–∞ –±—É–ª–æ –± –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ —Å–µ—Å—ñ—é MLBBChatGPT, —è–∫–±–∏ –≤–æ–Ω–∞ –±—É–ª–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ—é,
        # –∞–ª–µ –≤–æ–Ω–∞ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —ñ –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—ñ.

        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑—É–ø–∏–Ω–µ–Ω–æ.")

if __name__ == "__main__":
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ config.py
    asyncio.run(main())
