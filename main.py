import asyncio
import logging
import os
from datetime import datetime, timezone, timedelta

from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage # <-- 1. –Ü–º–ø–æ—Ä—Ç —Å—Ö–æ–≤–∏—â–∞ –¥–ª—è FSM
from aiogram.client.default import DefaultBotProperties
from aiogram.exceptions import TelegramAPIError

# –Ü–º–ø–æ—Ä—Ç–∏ –∑ –ø—Ä–æ—î–∫—Ç—É
from config import TELEGRAM_BOT_TOKEN, ADMIN_USER_ID, logger
# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ä–æ—É—Ç–µ—Ä–∏ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
from app.handlers.general_handlers import register_general_handlers, error_handler as general_error_handler
from app.handlers.vision_handlers import register_vision_handlers
from app.handlers.gemini_handler import gemini_router # <-- 2. –Ü–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞ Gemini
# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ cmd_go –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤ vision_handlers
from app.handlers.general_handlers import cmd_go


async def main() -> None:
    """
    –ì–æ–ª–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞ –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞.
    –í–æ–Ω–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –ª–æ–≥—É–≤–∞–Ω–Ω—è, –∫–æ–Ω—Ñ—ñ–≥—É—Ä—É—î –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä,
    —Ä–µ—î—Å—Ç—Ä—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ –ø–æ–º–∏–ª–æ–∫, —ñ –∑–∞–ø—É—Å–∫–∞—î polling.
    """
    bot_version = "v3.0.0 (—ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è Gemini)"
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ MLBB IUI mini {bot_version}... (PID: {os.getpid()})")

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ö–æ–≤–∏—â–∞ –¥–ª—è FSM. MemoryStorage –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏.
    # –î–ª—è production —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ RedisStorage.
    storage = MemoryStorage()

    bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    # –ü–µ—Ä–µ–¥–∞—î–º–æ —Å—Ö–æ–≤–∏—â–µ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    dp = Dispatcher(storage=storage)

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ—É—Ç–µ—Ä—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
    # –¢–∞–∫–∏–π –ø—ñ–¥—Ö—ñ–¥ —Ä–æ–±–∏—Ç—å –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—É —á–∏—Å—Ç–æ—é —Ç–∞ –º–æ–¥—É–ª—å–Ω–æ—é
    register_general_handlers(dp)
    register_vision_handlers(dp, cmd_go_handler_func=cmd_go)
    dp.include_router(gemini_router) # <-- 3. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ—É—Ç–µ—Ä–∞ Gemini

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫.
    # –Ø–≤–Ω–∏–π –≤–∏–∫–ª–∏–∫ register —î –±—ñ–ª—å—à –Ω–∞–¥—ñ–π–Ω–∏–º, –Ω—ñ–∂ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —É –≥–æ–ª–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—ñ.
    dp.errors.register(general_error_handler, exception=Exception)

    try:
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} (ID: {bot_info.id}) —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π!")

        if ADMIN_USER_ID:
            await notify_admin_on_startup(bot, bot_info, bot_version)

        logger.info("–†–æ–∑–ø–æ—á–∏–Ω–∞—é polling...")
        # –í–∏–¥–∞–ª—è—î–º–æ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, —â–æ–± –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ —Å—Ç–∞—Ä—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)

    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º (KeyboardInterrupt).")
    except TelegramAPIError as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ Telegram API –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É: {e}", exc_info=True)
    except Exception as e:
        logger.critical(f"–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É: {e}", exc_info=True)
    finally:
        logger.info("üõë –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞ —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ–π...")
        await dp.storage.close() # –ö–æ—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ —Å—Ö–æ–≤–∏—â–µ
        await bot.session.close()
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑—É–ø–∏–Ω–µ–Ω–æ.")

async def notify_admin_on_startup(bot: Bot, bot_info: types.User, bot_version: str):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –¥–µ—Ç–∞–ª—å–Ω–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞.
    """
    try:
        kyiv_tz = timezone(timedelta(hours=3))
        launch_time_kyiv = datetime.now(kyiv_tz).strftime('%Y-%m-%d %H:%M:%S %Z')

        admin_message_lines = [
            f"ü§ñ <b>MLBB IUI mini {bot_version} –∑–∞–ø—É—â–µ–Ω–æ!</b>",
            "",
            f"üÜî @{bot_info.username}",
            f"‚è∞ {launch_time_kyiv}",
            "---",
            "üî© <b>–ê–∫—Ç–∏–≤–Ω—ñ –º–æ–¥–µ–ª—ñ:</b>",
            "  ‚Ä¢ <b>Vision (OpenAI):</b> <code>gpt-4o-mini</code>",
            "  ‚Ä¢ <b>Text/Analysis (Google):</b> <code>gemini-1.5-flash</code>",
            "---",
            "‚ú® <b>–ö–ª—é—á–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:</b>",
            "  ‚Ä¢ –Ü–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–æ –º–æ–¥—É–ª—å <b>Google Gemini</b> –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ç–µ–∫—Å—Ç—É —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω—å.",
            "  ‚Ä¢ –î–æ–¥–∞–Ω–æ –∫–æ–º–∞–Ω–¥–∏ <code>/start</code>, <code>/help</code>, <code>/newchat</code> –¥–ª—è Gemini.",
            "  ‚Ä¢ –ë–æ—Ç —Ç–µ–ø–µ—Ä —Ä–µ–∞–≥—É—î –Ω–∞ —Ç—Ä–∏–≥–µ—Ä–Ω—ñ —Å–ª–æ–≤–∞ —Ç–∞ —Ñ–æ—Ç–æ –∑ –ø—ñ–¥–ø–∏—Å–∞–º–∏.",
            "  ‚Ä¢ –í–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–æ FSM –¥–ª—è –≤–µ–¥–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –¥—ñ–∞–ª–æ–≥—ñ–≤.",
            "üü¢ –ì–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!"
        ]
        admin_message = "\n".join(admin_message_lines)

        await bot.send_message(str(ADMIN_USER_ID), admin_message, parse_mode=ParseMode.HTML)
        logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É ID: {ADMIN_USER_ID}")
    except Exception as e:
        logger.warning(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω—É (ID: {ADMIN_USER_ID}): {e}", exc_info=True)


if __name__ == "__main__":
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è aiogram, —â–æ–± –±–∞—á–∏—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—ñ—à—ñ –ø–æ–º–∏–ª–∫–∏
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(name)s - %(message)s')
    asyncio.run(main())
