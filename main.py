"""
–ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram-–±–æ—Ç–∞ IUI mini.

–¶–µ–π —Ñ–∞–π–ª –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –æ–±'—î–∫—Ç—ñ–≤ Bot —Ç–∞ Dispatcher.
- –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ (—Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤) –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤.
- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ –∑–∞–≤–¥–∞–Ω—å (APScheduler).
- –ö–æ—Ä–µ–∫—Ç–Ω–∏–π –∑–∞–ø—É—Å–∫ —Ç–∞ –∑—É–ø–∏–Ω–∫—É –ø—Ä–æ—Ü–µ—Å—É –ø–æ–ª–ª—ñ–Ω–≥—É.
"""
import asyncio
import logging

from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from config import TELEGRAM_BOT_TOKEN, logger, ADMIN_USER_ID
from handlers.general_handlers import register_general_handlers, error_handler
from handlers.vision_handlers import register_vision_handlers
import database
from lobby_manager import check_expired_lobbies

# –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é cmd_go, —â–æ–± –ø–µ—Ä–µ–¥–∞—Ç–∏ —ó—ó –≤ vision_handlers
from handlers.general_handlers import cmd_go

async def main() -> None:
    """
    –ì–æ–ª–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î –±–æ—Ç–∞.
    """
    bot_version = "v5.3 (Dependency Fix)"
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ MLBB IUI mini {bot_version}...")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –±–æ—Ç–∞ –∑ –ø–∞—Ä—Å–∏–Ω–≥–æ–º HTML –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()

    # === –í–ò–†–Ü–®–ï–ù–ù–Ø –ü–†–û–ë–õ–ï–ú–ò: TypeError: missing 'bot_info' ===
    # –ö—Ä–æ–∫ 1: –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞ –∑ API Telegram.
    bot_info = await bot.get_me()
    # –ö—Ä–æ–∫ 2: –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ü—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ (–≤ "—Ä—é–∫–∑–∞–∫—É") –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞.
    # –¢–µ–ø–µ—Ä aiogram –∑–º–æ–∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –æ–±'—î–∫—Ç bot_info –≤ —É—Å—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
    # —Ç–∞ –æ–±—Ä–æ–±–Ω–∏–∫–∏, —è–∫—ñ –π–æ–≥–æ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å, –≤–∏—Ä—ñ—à—É—é—á–∏ –ø—Ä–æ–±–ª–µ–º—É –∑
    # 'missing 1 required positional argument: 'bot_info''.
    dp["bot_info"] = bot_info
    logger.info(f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–æ—Ç–∞ @{bot_info.username} –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞.")

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    database.initialize_database()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
    register_general_handlers(dp)
    register_vision_handlers(dp, cmd_go_handler_func=cmd_go)

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
    dp.errors.register(error_handler)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ª–æ–±—ñ
    scheduler = AsyncIOScheduler(timezone="Europe/Kyiv")
    scheduler.add_job(check_expired_lobbies, 'interval', minutes=1, args=(bot,))
    scheduler.start()
    logger.info("‚è∞ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ª–æ–±—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ.")

    try:
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} (ID: {bot_info.id}) —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π!")
        if ADMIN_USER_ID:
            await bot.send_message(str(ADMIN_USER_ID), f"ü§ñ <b>MLBB IUI mini {bot_version} —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!</b>")

        # –í–∏–¥–∞–ª—è—î–º–æ –≤–µ–±—Ö—É–∫ —Ç–∞ –ø–æ—á–∏–Ω–∞—î–º–æ –ø–æ–ª–ª—ñ–Ω–≥
        await bot.delete_webhook(drop_pending_updates=True)
        logger.info("–†–æ–∑–ø–æ—á–∏–Ω–∞—é –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏–π polling...")
        await dp.start_polling(bot)

    finally:
        logger.info("üõë –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞ —Ç–∞ –≤—Å—ñ—Ö —Ñ–æ–Ω–æ–≤–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤...")
        scheduler.shutdown()
        logger.info("–ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –∑–∞–≤–¥–∞–Ω—å –∑—É–ø–∏–Ω–µ–Ω–æ.")
        await bot.session.close()
        logger.info("–°–µ—Å—ñ—é –±–æ—Ç–∞ –∑–∞–∫—Ä–∏—Ç–æ.")
        logger.info("–†–æ–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º (Ctrl+C).")
    except Exception as e:
        logger.critical(f"‚ùå –ù–µ–ø–µ—Ä–µ–±–æ—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –Ω–∞ –Ω–∞–π–≤–∏—â–æ–º—É —Ä—ñ–≤–Ω—ñ: {e}", exc_info=True)
