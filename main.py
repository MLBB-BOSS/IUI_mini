"""
–ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞.

–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Ç–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è.
- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞.
- –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ (—Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤).
- –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –º—ñ–¥–ª–≤–∞—Ä—ñ (–ø—Ä–æ–º—ñ–∂–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤).
- –ó–∞–ø—É—Å–∫ —Ç–∞ –∫–æ—Ä–µ–∫—Ç–Ω—É –∑—É–ø–∏–Ω–∫—É –±–æ—Ç–∞.
"""
import asyncio
import logging
from sqlalchemy.ext.asyncio import create_async_engine, async_sessionmaker

# –Ü–º–ø–æ—Ä—Ç–∏ –∑ –Ω–∞—à–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É
from config import BOT_TOKEN, ASYNC_DATABASE_URL, logger
from handlers.general_handlers import register_general_handlers, error_handler, set_bot_commands
from handlers.profile_handlers import register_profile_handlers
from handlers.vision_handlers import register_vision_handlers
from middlewares.db_middleware import DbSessionMiddleware

async def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞.
    """
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ä—É—à—ñ—è —Ç–∞ —Ñ–∞–±—Ä–∏–∫–∏ —Å–µ—Å—ñ–π –¥–ª—è SQLAlchemy
    try:
        async_engine = create_async_engine(ASYNC_DATABASE_URL, echo=False)
        session_maker = async_sessionmaker(async_engine, expire_on_commit=False)
        logger.info("‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π —Ä—É—à—ñ–π –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ.")
    except Exception as e:
        logger.critical(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ä—É—à—ñ—è –ë–î: {e}", exc_info=True)
        return

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=BOT_TOKEN, parse_mode="HTML")
    dp = Dispatcher()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º—ñ–¥–ª–≤–∞—Ä—ñ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ —Å–µ—Å—ñ—ó –ë–î –≤ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    dp.update.middleware(DbSessionMiddleware(session_pool=session_maker))
    logger.info("‚úÖ –ú—ñ–¥–ª–≤–∞—Ä—å –¥–ª—è —Å–µ—Å—ñ–π –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ.")

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    register_general_handlers(dp)
    register_profile_handlers(dp)
    register_vision_handlers(dp)

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
    dp.errors.register(error_handler)
    logger.info("‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ.")

    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
    await set_bot_commands(bot)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ MLBB IUI mini v3.2.0 (Profile-Refactor)...")
    try:
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    finally:
        logger.info("üõë –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞ —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ–π...")
        # –ö–æ—Ä–µ–∫—Ç–Ω–µ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó –±–æ—Ç–∞
        if bot and hasattr(bot, 'session') and bot.session and not bot.session.is_closed(): # CORRECTED LINE
            await bot.session.close()
            logger.info("–°–µ—Å—ñ—é –±–æ—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–∫—Ä–∏—Ç–æ.")
        # –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—É–ª—É –∑'—î–¥–Ω–∞–Ω—å –∑ –ë–î
        await async_engine.dispose()
        logger.info("–ü—É–ª –∑'—î–¥–Ω–∞–Ω—å –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ –∑–∞–∫—Ä–∏—Ç–æ.")

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.warning("–ë–æ—Ç –±—É–≤ –∑—É–ø–∏–Ω–µ–Ω–∏–π –≤—Ä—É—á–Ω—É (KeyboardInterrupt/SystemExit).")
    except Exception as e:
        logger.critical(f"‚ùå –ù–µ–ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –Ω–∞ –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä—ñ–≤–Ω—ñ: {e}", exc_info=True)
