import asyncio
import logging # –õ–æ–≥–µ—Ä —Ç–µ–ø–µ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –≤ config.py
import os
from datetime import datetime, timezone, timedelta

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.exceptions import TelegramAPIError # –ú–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –¥–ª—è main

# –Ü–º–ø–æ—Ä—Ç–∏ –∑ –ø—Ä–æ—î–∫—Ç—É
from config import TELEGRAM_BOT_TOKEN, ADMIN_USER_ID, logger # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ logger –∑ config
# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ —Å–∞–º –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
from handlers.general_handlers import register_general_handlers, error_handler as general_error_handler
from handlers.vision_handlers import register_vision_handlers
# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ cmd_go –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤ vision_handlers
from handlers.general_handlers import cmd_go


async def main() -> None:
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞."""
    # –û–Ω–æ–≤–ª—é—î–º–æ –≤–µ—Ä—Å—ñ—é, —â–æ–± –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –Ω–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å
    bot_version = "v2.10.0 (–¥–æ–¥–∞–Ω–æ –∞–Ω–∞–ª—ñ–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥—Ä–∞–≤—Ü—è /analyzestats)" 
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ MLBB IUI mini {bot_version}... (PID: {os.getpid()})")

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    register_general_handlers(dp)
    # –ü–µ—Ä–µ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é cmd_go –≤ register_vision_handlers.
    # register_vision_handlers —Ç–µ–ø–µ—Ä –≤–∫–ª—é—á–∞—î —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é /analyzestats.
    register_vision_handlers(dp, cmd_go_handler_func=cmd_go) 
    
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
    @dp.errors()
    async def global_error_handler_wrapper(update_event, exception: Exception):
        # –¢–µ–ø–µ—Ä bot –¥–æ—Å—Ç—É–ø–Ω–∏–π –≤ —Ü—å–æ–º—É —Å–∫–æ—É–ø—ñ
        await general_error_handler(update_event, exception, bot)


    try:
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} (ID: {bot_info.id}) —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π!")
        if ADMIN_USER_ID != 0: # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ADMIN_USER_ID –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
            try:
                kyiv_tz = timezone(timedelta(hours=3))
                launch_time_kyiv = datetime.now(kyiv_tz).strftime('%Y-%m-%d %H:%M:%S %Z')
                
                # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω–∞
                admin_message_lines = [
                    f"ü§ñ <b>MLBB IUI mini {bot_version} –∑–∞–ø—É—â–µ–Ω–æ!</b>",
                    "",
                    f"üÜî @{bot_info.username}",
                    f"‚è∞ {launch_time_kyiv}",
                    f"üî© –ú–æ–¥–µ–ª—ñ: Vision: <code>gpt-4o-mini</code>, –¢–µ–∫—Å—Ç/–û–ø–∏—Å: <code>gpt-4.1-turbo</code> (–∂–æ—Ä—Å—Ç–∫–æ –∑–∞–¥–∞–Ω—ñ)",
                    "‚ú® <b>–ù–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:</b>",
                    "  ‚Ä¢ –î–æ–¥–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É <code>/analyzestats</code> –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥—Ä–∞–≤—Ü—è.",
                    "üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É —Ç–∞ –ª–æ–≥—ñ–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å –æ–Ω–æ–≤–ª–µ–Ω—ñ.",
                    "üü¢ –ì–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!"
                ]
                admin_message = "\n".join(admin_message_lines)
                
                await bot.send_message(ADMIN_USER_ID, admin_message, parse_mode=ParseMode.HTML)
                logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É ID: {ADMIN_USER_ID}")
            except Exception as e:
                logger.warning(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω—É (ID: {ADMIN_USER_ID}): {e}")

        logger.info("–†–æ–∑–ø–æ—á–∏–Ω–∞—é polling...")
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º (KeyboardInterrupt).")
    except TelegramAPIError as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ Telegram API –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –∞–±–æ —Ä–æ–±–æ—Ç–∏: {e}", exc_info=True)
    except Exception as e:
        logger.critical(f"–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –∞–±–æ —Ä–æ–±–æ—Ç–∏: {e}", exc_info=True)
    finally:
        logger.info("üõë –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞ —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ–π...")
        # –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó HTTP –∫–ª—ñ—î–Ω—Ç–∞ –±–æ—Ç–∞ (—è–∫—â–æ –≤–æ–Ω–∞ –±—É–ª–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ —ñ –≤—ñ–¥–∫—Ä–∏—Ç–∞)
        # –£ aiogram 3.x —Å–µ—Å—ñ—è –∑–∞–∑–≤–∏—á–∞–π –∫–µ—Ä—É—î—Ç—å—Å—è —Å–∞–º–∏–º Bot –æ–±'—î–∫—Ç–æ–º —ñ –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –ø—Ä–∏ –π–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ
        # –∞–±–æ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ —Ä–æ–±–æ—Ç–∏ dp.start_polling.
        # –Ø–≤–Ω–∏–π –≤–∏–∫–ª–∏–∫ close() –¥–ª—è bot.session –º–æ–∂–µ –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º –¥–ª—è –ø–µ–≤–Ω–æ—Å—Ç—ñ.
        if bot and hasattr(bot, 'session') and bot.session and not bot.session.closed:
            try:
                await bot.session.close()
                logger.info("–°–µ—Å—ñ—é HTTP –∫–ª—ñ—î–Ω—Ç–∞ Bot –∑–∞–∫—Ä–∏—Ç–æ.")
            except Exception as e:
                logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó HTTP –∫–ª—ñ—î–Ω—Ç–∞ Bot: {e}", exc_info=True)
        
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑—É–ø–∏–Ω–µ–Ω–æ.")

if __name__ == "__main__":
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ config.py
    # (–∞–±–æ —Ç—É—Ç, —è–∫—â–æ config.py –Ω–µ —ñ–º–ø–æ—Ä—Ç—É—î—Ç—å—Å—è –ø–µ—Ä—à–∏–º –∞–±–æ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –ª–æ–≥—É–≤–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ)
    asyncio.run(main())
