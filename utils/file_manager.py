# utils/file_manager.py
"""
–ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Heroku dyno restarts.
–ó–∞–±–µ–∑–ø–µ—á—É—î –ø–æ—Å—Ç—ñ–π–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —É Cloudinary —Ç–∞ fallback –º–µ—Ö–∞–Ω—ñ–∑–º–∏.
"""
import asyncio
import io
from typing import Optional
import aiohttp
import cloudinary
import cloudinary.uploader
from aiohttp.client_exceptions import ClientResponseError

from config import logger

# ‚úÖ –í–ò–î–ê–õ–ï–ù–û –†–£–ß–ù–£ –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Æ –¢–ê –ó–ê–ô–í–Ü –Ü–ú–ü–û–†–¢–ò.
# –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ cloudinary –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–Ω–∞–π–¥–µ –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è CLOUDINARY_URL,
# —è–∫—É –º–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏ –≤ config.py –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é load_dotenv().

class FileResilienceManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è Telegram –±–æ—Ç–∞ –Ω–∞ Heroku.
    """
    
    def __init__(self):
        self.session: Optional[aiohttp.ClientSession] = None
        
    async def __aenter__(self):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π context manager –¥–ª—è HTTP —Å–µ—Å—ñ—ó."""
        self.session = aiohttp.ClientSession(
            timeout=aiohttp.ClientTimeout(total=30)
        )
        return self
        
    async def __aexit__(self, exc_type, exc_val, exc_tb):
        """–ó–∞–∫—Ä–∏—Ç—Ç—è HTTP —Å–µ—Å—ñ—ó."""
        if self.session and not self.session.closed:
            await self.session.close()

    async def optimize_and_store_image(
        self, 
        image_bytes: bytes, 
        user_id: int, 
        file_type: str,
        max_size_kb: int = 500
    ) -> Optional[str]:
        """
        –û–ø—Ç–∏–º—ñ–∑—É—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î —É Cloudinary.
        
        Args:
            image_bytes: –ë–∞–π—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
            user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
            file_type: –¢–∏–ø —Ñ–∞–π–ª—É ('profile', 'stats', 'heroes', 'avatar').
            max_size_kb: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —É –ö–ë –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –∫–æ–º–ø—Ä–µ—Å—ñ—ó.
            
        Returns:
            –ü–æ—Å—Ç—ñ–π–Ω–∏–π URL –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–±–æ None.
        """
        try:
            public_id = f"mlbb_user_{user_id}_{file_type}_optimized"
            
            upload_params = {
                "public_id": public_id,
                "folder": "mlbb_profiles",
                "resource_type": "image",
                "format": "webp",
                "quality": "auto:good",
                "fetch_format": "auto",
                "overwrite": True,
                "invalidate": True
            }
            
            if len(image_bytes) > max_size_kb * 1024:
                upload_params.update({"quality": "auto:low", "width": 800, "height": 800, "crop": "limit"})
            
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ asyncio.to_thread –¥–ª—è –∑–∞–ø—É—Å–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º—É –∫–æ–¥—ñ
            result = await asyncio.to_thread(
                cloudinary.uploader.upload,
                image_bytes,
                **upload_params
            )
            
            optimized_url = result.get('secure_url')
            if optimized_url:
                logger.info(f"–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è {file_type} –¥–ª—è user {user_id} –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {optimized_url}")
                return optimized_url
            
        except Exception as e:
            logger.exception(f"–ü–æ–º–∏–ª–∫–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è user {user_id}: {e}")
        
        return None
    
    @staticmethod
    def get_enhanced_error_message(user_name: str) -> str:
        """
        –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–∫—Ä–∞—â–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
        """
        return (
            f"üîÑ **–û–π, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, {user_name}!**\n\n"
            "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ —Ñ–∞–π–ª—É. –ú–æ–∂–ª–∏–≤–æ, –≤—ñ–Ω –±—É–≤ —Ç–∏–º—á–∞—Å–æ–≤–∏–º.\n\n"
            "üì∏ **–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —â–µ —Ä–∞–∑.**\n\n"
            "üôè –î—è–∫—É—î–º–æ –∑–∞ —Ä–æ–∑—É–º—ñ–Ω–Ω—è!"
        )

file_resilience_manager = FileResilienceManager()
