"""
utils/formatter.py

–ú–∞–π—Å—Ç–µ—Ä –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è: —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
–≤—Å—ñ—Ö –≤–∏—Ö—ñ–¥–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –±–æ—Ç–∞ –∑–∞ —î–¥–∏–Ω–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º.
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—ó –î—ñ–∞–ª–æ–≥–æ–≤–æ—ó –°–∏—Å—Ç–µ–º–∏" (ADS).
"""
import html
from typing import Literal

ContentType = Literal["default", "success", "error", "joke", "technical", "tip"]

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —Ç–∞ –µ–º–æ–¥–∑—ñ –∑–∞ —Ç–∏–ø–∞–º–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É
RESPONSE_TEMPLATES = {
    "default": {
        "emoji": "üí¨",
        "title": "GGenius –Ω–∞ –∑–≤'—è–∑–∫—É"
    },
    "success": {
        "emoji": "üèÜ",
        "title": "–ü–µ—Ä–µ–º–æ–≥–∞!"
    },
    "error": {
        "emoji": "üíÄ",
        "title": "–û–π, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫"
    },
    "joke": {
        "emoji": "üòÇ",
        "title": "–•–≤–∏–ª–∏–Ω–∫–∞ –≥—É–º–æ—Ä—É"
    },
    "technical": {
        "emoji": "‚öôÔ∏è",
        "title": "–¢–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑"
    },
    "tip": {
        "emoji": "üí°",
        "title": "–ö–æ—Ä–∏—Å–Ω–∞ –ø–æ—Ä–∞–¥–∞"
    }
}

def format_bot_response(
    text: str,
    content_type: ContentType = "default",
    tip: str | None = None
) -> str:
    """
    –§–æ—Ä–º–∞—Ç—É—î –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç —É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –≤–∏–≥–ª—è–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–æ—Ç–∞.

    Args:
        text: –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        content_type: –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è –≤–∏–±–æ—Ä—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞ –µ–º–æ–¥–∑—ñ.
        tip: –ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∞ –ø–æ—Ä–∞–¥–∞, —â–æ –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –≤ –∫—ñ–Ω—Ü—ñ.

    Returns:
        –ü–æ–≤–Ω—ñ—Å—Ç—é –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É HTML.
    """
    template = RESPONSE_TEMPLATES.get(content_type, RESPONSE_TEMPLATES["default"])
    
    header = f"{template['emoji']} <b>{template['title']}</b>"
    separator = "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    
    # –ï–∫—Ä–∞–Ω—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤ —Ç–µ–≥—ñ–≤,
    # –∞–ª–µ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞—à—ñ –≤–ª–∞—Å–Ω—ñ —Ç–µ–≥–∏ <b>, <i>, <code>
    # –¶–µ —Å–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è, –¥–ª—è —Å–∫–ª–∞–¥–Ω–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤ –º–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –±—ñ–ª—å—à –Ω–∞–¥—ñ–π–Ω–∏–π –ø–∞—Ä—Å–µ—Ä
    safe_text = text.strip()

    parts = [
        f"<blockquote>{header}",
        separator,
        "",
        safe_text
    ]

    if tip:
        parts.extend([
            "",
            f"üí° <i>–ü–æ—Ä–∞–¥–∞: {html.escape(tip)}</i>"
        ])

    parts.append("</blockquote>")
    
    return "\n".join(parts)
