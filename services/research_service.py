"""
–°–µ—Ä–≤—ñ—Å –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≥–ª–∏–±–æ–∫–∏—Ö –¥–æ—Å–ª—ñ–¥–∂–µ–Ω—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é OpenAI.
"""
import asyncio
import logging # üëà –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç
from openai import OpenAI
from typing import Dict, Any

from config import OPENAI_API_KEY

# üëà –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ª–æ–≥–µ—Ä –¥–ª—è —Ü—å–æ–≥–æ –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ –¥–ª—è –¥–æ–≤–≥–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—à –∫–ª—é—á –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
client = OpenAI(api_key=OPENAI_API_KEY, timeout=3600.0)


class MLBBDeepResearch:
    """–ö–µ—Ä—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è–º —Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è–º –∑–∞–≤–¥–∞–Ω—å Deep Research."""

    def __init__(self, model: str = "o4-mini-deep-research"):
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Å–µ—Ä–≤—ñ—Å –∑ –≤–∫–∞–∑–∞–Ω–æ—é –º–æ–¥–µ–ª–ª—é.

        Args:
            model (str): –ù–∞–∑–≤–∞ –º–æ–¥–µ–ª—ñ –¥–ª—è –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è.
        """
        self.model = model
        logger.info(f"MLBBDeepResearch service initialized with model: {self.model}")

    def _rewrite_prompt(self, user_query: str) -> str:
        """
        –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –º–æ–¥–µ–ª—ñ.
        """
        logger.info(f"Rewriting prompt for query: '{user_query}'")
        rewritten_prompt = f"""
        –ü—Ä–æ–≤–µ–¥–∏ –≥–ª–∏–±–æ–∫–µ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –Ω–∞ —Ç–µ–º—É: '{user_query}'.
        –¢–µ–º–∞ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –≥—Ä–∏ Mobile Legends: Bang Bang.
        
        –¢–≤–æ—ó –∑–∞–≤–¥–∞–Ω–Ω—è:
        1.  **–ê–Ω–∞–ª—ñ–∑**: –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Ç–µ–º—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –≤–µ–±-–ø–æ—à—É–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.
        2.  **–°—Ç—Ä—É–∫—Ç—É—Ä–∞**: –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∞ —è–∫ –∑–≤—ñ—Ç –∑ —á—ñ—Ç–∫–∏–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (`<b>...</b>`), —Å–ø–∏—Å–∫–∞–º–∏ (`‚Ä¢ ...`) —Ç–∞ –≤–∏—Å–Ω–æ–≤–∫–∞–º–∏.
        3.  **–î–∂–µ—Ä–µ–ª–∞**: –ü—Ä—ñ–æ—Ä–∏—Ç–µ–∑—É–π –æ—Ñ—ñ—Ü—ñ–π–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞, —ñ–≥—Ä–æ–≤—ñ –≤—ñ–∫—ñ (–Ω–∞–ø—Ä., Fandom), —Ç–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω—ñ —Å–∞–π—Ç–∏ (–Ω–∞–ø—Ä., MLBB.GG). –í–∫–ª—é—á–∞–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–∂–µ—Ä–µ–ª–∞.
        4.  **–î–∞–Ω—ñ**: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ü–∏—Ñ—Ä–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –ø–æ—Ä—ñ–≤–Ω—è–ª—å–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ —Ü–µ –¥–æ—Ä–µ—á–Ω–æ.
        5.  **–ú–æ–≤–∞**: –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
        6.  **–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è**: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π HTML —Ç–µ–≥–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è (`<b>`, `<i>`, `<code>`).
        """
        return rewritten_prompt

    async def start_research_task(self, user_query: str) -> Dict[str, Any]:
        """
        –ó–∞–ø—É—Å–∫–∞—î –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≥–ª–∏–±–æ–∫–æ–≥–æ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è.
        """
        detailed_prompt = self._rewrite_prompt(user_query)

        logger.info(f"Starting deep research task with model '{self.model}'...")
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ asyncio.to_thread –¥–ª—è –∑–∞–ø—É—Å–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ SDK –≤ async-–∫–æ–¥—ñ
        response = await asyncio.to_thread(
            client.responses.create,
            model=self.model,
            input=detailed_prompt,
            tools=[
                {"type": "web_search_preview"},
                {"type": "code_interpreter", "container": {"type": "auto"}},
            ],
        )
        
        logger.info(f"Deep research task with '{self.model}' completed.")
        return response.dict()
