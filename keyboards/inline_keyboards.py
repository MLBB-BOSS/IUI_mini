from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Optional

# --- –ù–û–í–ê –ö–õ–ê–í–Ü–ê–¢–£–†–ê –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø ---
def create_party_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞—Ç—ñ."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –¢–∞–∫, –¥–æ–ø–æ–º–æ–≥—Ç–∏", callback_data="party_create_confirm")
    builder.button(text="‚ùå –ù—ñ, —è —Å–∞–º", callback_data="party_create_cancel")
    return builder.as_markup()

def create_role_selection_keyboard(available_roles: List[str]) -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–æ–ª—ñ."""
    builder = InlineKeyboardBuilder()
    for role in available_roles:
        # –î–æ–¥–∞–º–æ –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—Å–∏
        role_emoji_map = {
            "–¢–∞–Ω–∫/–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": "üõ°Ô∏è", "–õ—ñ—Å–Ω–∏–∫": "üå≥", "–ú–∞–≥ (–º—ñ–¥)": "üßô",
            "–°—Ç—Ä—ñ–ª–µ—Ü—å (–∑–æ–ª–æ—Ç–æ)": "üèπ", "–ë–æ—î—Ü—å (–¥–æ—Å–≤—ñ–¥)": "‚öîÔ∏è"
        }
        emoji = role_emoji_map.get(role, "üîπ")
        builder.button(text=f"{emoji} {role}", callback_data=f"party_role_select_{role}")
    builder.adjust(1) # –ü–æ –æ–¥–Ω—ñ–π –∫–Ω–æ–ø—Ü—ñ –≤ —Ä—è–¥ –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ
    return builder.as_markup()

# --- –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ª–æ–±—ñ (–±–µ–∑ –∑–º—ñ–Ω, –∞–ª–µ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –ø–æ-–Ω–æ–≤–æ–º—É) ---
def create_dynamic_lobby_keyboard(lobby_id: str, user_id: int, lobby_data: Dict) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –¥–∏–Ω–∞–º—ñ—á–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ª–æ–±—ñ, –≤—Ä–∞—Ö–æ–≤—É—é—á–∏ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    builder = InlineKeyboardBuilder()
    players = lobby_data.get("players", {})
    leader_id = lobby_data.get("leader_id")

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è" –≤–∏–¥–∏–º–∞ –¥–ª—è –≤—Å—ñ—Ö, —Ö—Ç–æ —â–µ –Ω–µ –≤ –ø–∞—Ç—ñ
    if user_id not in players:
        builder.button(text="‚ûï –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è", callback_data=f"party_join:{lobby_id}")

    # –ö–Ω–æ–ø–∫–∞ "–í–∏–π—Ç–∏" –≤–∏–¥–∏–º–∞ –¥–ª—è –≤—Å—ñ—Ö, —Ö—Ç–æ –≤–∂–µ –≤ –ø–∞—Ç—ñ (–∫—Ä—ñ–º –ª—ñ–¥–µ—Ä–∞)
    if user_id in players and user_id != leader_id:
        builder.button(text="‚ùå –í–∏–π—Ç–∏ –∑ –ø–∞—Ç—ñ", callback_data=f"party_leave:{lobby_id}")

    # –ö–Ω–æ–ø–∫–∞ "–°–∫–∞—Å—É–≤–∞—Ç–∏" –≤–∏–¥–∏–º–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ª—ñ–¥–µ—Ä–∞ –ø–∞—Ç—ñ
    if user_id == leader_id:
        builder.button(text="üö´ –°–∫–∞—Å—É–≤–∞—Ç–∏ –ª–æ–±—ñ", callback_data=f"party_cancel:{lobby_id}")

    return builder.as_markup()

# ... —Ä–µ—à—Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä –±–µ–∑ –∑–º—ñ–Ω ...
