from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Optional

# ... (–∫–æ–¥ create_party_confirmation_keyboard —Ç–∞ create_role_selection_keyboard –±–µ–∑ –∑–º—ñ–Ω)
def create_party_confirmation_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –¢–∞–∫, —Å—Ç–≤–æ—Ä–∏—Ç–∏", callback_data="party_create_yes")
    builder.button(text="‚ùå –ù—ñ, –¥—è–∫—É—é", callback_data="party_create_no")
    return builder.as_markup()

def create_role_selection_keyboard(available_roles: List[str]) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for role in available_roles:
        builder.button(text=role, callback_data=f"party_role_select_{role}")
    builder.adjust(1)
    return builder.as_markup()


# --- –ù–û–í–Ü –ö–õ–ê–í–Ü–ê–¢–£–†–ò ---
def create_party_size_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç—É –ø–∞—Ç—ñ."""
    builder = InlineKeyboardBuilder()
    sizes = {"–§—É–ª–ª (5)": 5, "–ö–≤–∞–¥—Ä–æ (4)": 4, "–¢—Ä—ñ–æ (3)": 3, "–î—É–æ (2)": 2}
    for text, size in sizes.items():
        builder.button(text=text, callback_data=f"party_size_{size}")
    builder.adjust(2)
    return builder.as_markup()

def create_lobby_lifetime_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É —á–∞—Å—É –∂–∏—Ç—Ç—è –ª–æ–±—ñ."""
    builder = InlineKeyboardBuilder()
    lifetimes = {
        "30 —Ö–≤–∏–ª–∏–Ω": 1800, "1 –≥–æ–¥–∏–Ω–∞": 3600, "3 –≥–æ–¥–∏–Ω–∏": 10800,
        "6 –≥–æ–¥–∏–Ω": 21600, "12 –≥–æ–¥–∏–Ω": 43200
    }
    for text, seconds in lifetimes.items():
        builder.button(text=text, callback_data=f"party_lifetime_{seconds}")
    builder.adjust(2)
    return builder.as_markup()

def create_dynamic_lobby_keyboard(user_id: int, lobby_data: Dict) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –¥–∏–Ω–∞–º—ñ—á–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ª–æ–±—ñ, –≤—Ä–∞—Ö–æ–≤—É—é—á–∏ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    builder = InlineKeyboardBuilder()
    players = lobby_data.get("players", {})
    leader_id = lobby_data.get("leader_id")

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è" –≤–∏–¥–∏–º–∞ –¥–ª—è –≤—Å—ñ—Ö, —Ö—Ç–æ —â–µ –Ω–µ –≤ –ø–∞—Ç—ñ
    if str(user_id) not in players:
        builder.button(text="‚ûï –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è", callback_data="party_join")

    # –ö–Ω–æ–ø–∫–∞ "–í–∏–π—Ç–∏" –≤–∏–¥–∏–º–∞ –¥–ª—è –≤—Å—ñ—Ö, —Ö—Ç–æ –≤–∂–µ –≤ –ø–∞—Ç—ñ (–∫—Ä—ñ–º –ª—ñ–¥–µ—Ä–∞)
    if str(user_id) in players and user_id != leader_id:
        builder.button(text="‚ùå –í–∏–π—Ç–∏ –∑ –ø–∞—Ç—ñ", callback_data="party_leave")

    # –ö–Ω–æ–ø–∫–∞ "–°–∫–∞—Å—É–≤–∞—Ç–∏" –≤–∏–¥–∏–º–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ª—ñ–¥–µ—Ä–∞ –ø–∞—Ç—ñ
    if user_id == leader_id:
        builder.button(text="üö´ –°–∫–∞—Å—É–≤–∞—Ç–∏ –ª–æ–±—ñ", callback_data="party_cancel")

    return builder.as_markup()
