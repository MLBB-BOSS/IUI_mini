"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —Ç–∞–∫–∏—Ö —è–∫ –≤–≤—ñ–º–∫–Ω–µ–Ω–Ω—è/–≤–∏–º–∫–Ω–µ–Ω–Ω—è –±–æ—Ç–∞.
"""
from aiogram import Router, Bot
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.enums import ParseMode

from database.crud import set_user_mute_status, get_user_by_telegram_id
from utils.cache_manager import clear_user_cache
from config import logger

settings_router = Router()

MUTE_MESSAGE = (
    "üîá **–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤–∏–º–∫–Ω–µ–Ω–æ.**\n\n"
    "–Ø –±—ñ–ª—å—à–µ –Ω–µ –±—É–¥—É —Ä–µ–∞–≥—É–≤–∞—Ç–∏ –Ω–∞ –≤–∞—à—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ —Ü—å–æ–º—É —á–∞—Ç—ñ.\n\n"
    "üí° *–©–æ–± —É–≤—ñ–º–∫–Ω—É—Ç–∏ –º–µ–Ω–µ –∑–Ω–æ–≤—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å /unmute –∞–±–æ –¥–∞–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –±—É–¥—å-—è–∫–µ –º–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.*"
)

UNMUTE_MESSAGE = (
    "üîä **–ü—Ä–∏—î–º–Ω–æ –∑–Ω–æ–≤—É —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è!**\n\n"
    "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–ª—è –≤–∞—Å –∑–Ω–æ–≤—É —É–≤—ñ–º–∫–Ω–µ–Ω–æ. "
    "–Ø –≥–æ—Ç–æ–≤–∏–π –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏, –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ —Ç–∞ –±—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –∂–∏—Ç—Ç—ñ —á–∞—Ç—É. –ü–æ–≥–Ω–∞–ª–∏! üöÄ"
)

ERROR_MESSAGE = "ü§î –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–ø—Ä–æ–±—É–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ."


@settings_router.message(Command("mute"))
async def cmd_mute(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /mute –¥–ª—è –≤–∏–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π."""
    if not message.from_user:
        return

    user_id = message.from_user.id
    logger.info(f"User {user_id} triggered /mute command.")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∑–∞–≥–∞–ª—ñ —î –≤ –±–∞–∑—ñ
    user_data = await get_user_by_telegram_id(user_id)
    if not user_data:
        await message.reply(
            "–°–ø–æ—á–∞—Ç–∫—É –≤–∞—Å –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /profile, "
            "–∞ –ø–æ—Ç—ñ–º –≤–∏ –∑–º–æ–∂–µ—Ç–µ –∫–µ—Ä—É–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏."
        )
        return

    success = await set_user_mute_status(user_id, is_muted=True)
    if success:
        await clear_user_cache(user_id)  # –Ü–Ω–≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–µ—à—É
        await message.reply(MUTE_MESSAGE, parse_mode=ParseMode.HTML)
    else:
        await message.reply(ERROR_MESSAGE)


@settings_router.message(Command("unmute"))
async def cmd_unmute(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /unmute –¥–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π."""
    if not message.from_user:
        return

    user_id = message.from_user.id
    logger.info(f"User {user_id} triggered /unmute command.")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∑–∞–≥–∞–ª—ñ —î –≤ –±–∞–∑—ñ
    user_data = await get_user_by_telegram_id(user_id)
    if not user_data:
        # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î, —Ç–æ –≤—ñ–Ω —ñ —Ç–∞–∫ –Ω–µ "–∑–∞–º'—é—á–µ–Ω–∏–π", –Ω—ñ—á–æ–≥–æ —Ä–æ–±–∏—Ç–∏ –Ω–µ —Ç—Ä–µ–±–∞
        await message.reply("–í–∏ –π —Ç–∞–∫ –Ω–µ –±—É–ª–∏ '–∑–∞–º\'—é—á–µ–Ω—ñ', –∞–ª–µ –¥—è–∫—É—é –∑–∞ –∫–æ–º–∞–Ω–¥—É! üòâ")
        return

    success = await set_user_mute_status(user_id, is_muted=False)
    if success:
        await clear_user_cache(user_id)  # –Ü–Ω–≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–µ—à—É
        await message.reply(UNMUTE_MESSAGE, parse_mode=ParseMode.HTML)
    else:
        await message.reply(ERROR_MESSAGE)


def register_settings_handlers(dp: Router):
    """–†–µ—î—Å—Ç—Ä—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å."""
    dp.include_router(settings_router)
    logger.info("‚úÖ –û–±—Ä–æ–±–Ω–∏–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (/mute, /unmute) –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ.")
