"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ª–æ–±—ñ –¥–ª—è –ø–æ—à—É–∫—É –ø–∞—Ç—ñ.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î FSM –¥–ª—è –ø–æ–∫—Ä–æ–∫–æ–≤–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª–æ–±—ñ.
"""
import html
import logging
import re
from typing import List

from aiogram import Bot, Dispatcher, F, Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from keyboards.inline_keyboards import (
    create_party_confirmation_keyboard,
    create_role_selection_keyboard,
    create_dynamic_lobby_keyboard
)
from states.party_states import PartyCreation
from config import logger

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –ª–æ–±—ñ. –í —ñ–¥–µ–∞–ª—ñ —Ü–µ –º–∞—î –±—É—Ç–∏ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö (Redis, PostgreSQL).
# –î–ª—è –ø—Ä–æ—Ç–æ—Ç–∏–ø—É —Å–ª–æ–≤–Ω–∏–∫ —î –ø—Ä–∏–π–Ω—è—Ç–Ω–∏–º —Ä—ñ—à–µ–Ω–Ω—è–º.
active_lobbies = {}

# –£—Å—ñ —Ä–æ–ª—ñ, –¥–æ—Å—Ç—É–ø–Ω—ñ –≤ –≥—Ä—ñ
ALL_ROLES = ["–¢–∞–Ω–∫/–ü—ñ–¥—Ç—Ä–∏–º–∫–∞", "–õ—ñ—Å–Ω–∏–∫", "–ú–∞–≥ (–º—ñ–¥)", "–°—Ç—Ä—ñ–ª–µ—Ü—å (–∑–æ–ª–æ—Ç–æ)", "–ë–æ—î—Ü—å (–¥–æ—Å–≤—ñ–¥)"]

party_router = Router()

def get_lobby_message_text(lobby_data: dict) -> str:
    """–§–æ—Ä–º–∞—Ç—É—î —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ª–æ–±—ñ."""
    leader_name = html.escape(lobby_data['leader_name'])
    
    players_list = []
    role_emoji_map = {
        "–¢–∞–Ω–∫/–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": "üõ°Ô∏è", "–õ—ñ—Å–Ω–∏–∫": "üå≥", "–ú–∞–≥ (–º—ñ–¥)": "üßô",
        "–°—Ç—Ä—ñ–ª–µ—Ü—å (–∑–æ–ª–æ—Ç–æ)": "üèπ", "–ë–æ—î—Ü—å (–¥–æ—Å–≤—ñ–¥)": "‚öîÔ∏è"
    }
    
    taken_roles = []
    for player_id, player_info in lobby_data['players'].items():
        role = player_info['role']
        name = html.escape(player_info['name'])
        emoji = role_emoji_map.get(role, "üîπ")
        players_list.append(f"‚Ä¢ {emoji} <b>{role}:</b> {name}")
        taken_roles.append(role)

    available_roles_list = [f"‚Ä¢ {role_emoji_map.get(r, 'üîπ')} {r}" for r in ALL_ROLES if r not in taken_roles]

    header = f"üî• <b>–ó–±–∏—Ä–∞—î–º–æ –ø–∞—Ç—ñ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥!</b> üî•\n\n<b>–Ü–Ω—ñ—Ü—ñ–∞—Ç–æ—Ä:</b> {leader_name}\n"
    players_section = "<b>–£—á–∞—Å–Ω–∏–∫–∏:</b>\n" + "\n".join(players_list)
    
    available_section = ""
    if available_roles_list:
        available_section = "\n\n<b>–í—ñ–ª—å–Ω—ñ —Ä–æ–ª—ñ:</b>\n" + "\n".join(available_roles_list)
    else:
        available_section = "\n\n‚úÖ <b>–ö–æ–º–∞–Ω–¥–∞ –∑—ñ–±—Ä–∞–Ω–∞!</b>"

    return f"{header}\n{players_section}{available_section}"


@party_router.message(F.text & F.func(lambda msg: re.search(r'\b(–ø–∞—Ç—ñ|–ø–∞—Ç—ñ|–∫–æ–º–∞–Ω–¥—É|–ø–∞—Ç–∏)\b', msg.text.lower()) and re.search(r'\b(–∑–±–∏—Ä–∞—é|–≥–æ|—à—É–∫–∞—é)\b', msg.text.lower())))
async def ask_for_party_creation(message: Message, state: FSMContext):
    """
    –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ—à—É–∫ –ø–∞—Ç—ñ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î FSM.
    """
    await state.set_state(PartyCreation.confirm_creation)
    await message.reply(
        "–ë–∞—á—É, —Ç–∏ —Ö–æ—á–µ—à –∑—ñ–±—Ä–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É. –î–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ?",
        reply_markup=create_party_confirmation_keyboard()
    )

@party_router.callback_query(PartyCreation.confirm_creation, F.data == "party_create_cancel")
async def cancel_party_creation(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–æ–±–ª—è—î –≤—ñ–¥–º–æ–≤—É –≤—ñ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞—Ç—ñ."""
    await state.clear()
    await callback.message.edit_text("–ì–∞—Ä–∞–∑–¥. –Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞—î—à - –∑–≤–µ—Ä—Ç–∞–π—Å—è! üòâ")
    await callback.answer()

@party_router.callback_query(PartyCreation.confirm_creation, F.data == "party_create_confirm")
async def prompt_for_role(callback: CallbackQuery, state: FSMContext):
    """
    –ü—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –∑–∞–ø–∏—Ç—É—î —É —ñ–Ω—ñ—Ü—ñ–∞—Ç–æ—Ä–∞ –π–æ–≥–æ —Ä–æ–ª—å.
    """
    await state.set_state(PartyCreation.select_role)
    await callback.message.edit_text(
        "–ß—É–¥–æ–≤–æ! –û–±–µ—Ä—ñ—Ç—å —Å–≤–æ—é —Ä–æ–ª—å, —â–æ–± —ñ–Ω—à—ñ –∑–Ω–∞–ª–∏, –∫–æ–≥–æ –≤–∏ —à—É–∫–∞—î—Ç–µ:",
        reply_markup=create_role_selection_keyboard(ALL_ROLES)
    )
    await callback.answer()

@party_router.callback_query(PartyCreation.select_role, F.data.startswith("party_role_select_"))
async def create_party_lobby(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """
    –§—ñ–Ω–∞–ª—å–Ω–∏–π –∫—Ä–æ–∫. –°—Ç–≤–æ—Ä—é—î –ª–æ–±—ñ, –¥–æ–¥–∞—î —ñ–Ω—ñ—Ü—ñ–∞—Ç–æ—Ä–∞ —Ç–∞ –ø—É–±–ª—ñ–∫—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
    """
    user = callback.from_user
    selected_role = callback.data.split("party_role_select_")[1]
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –¥–ª—è –ª–æ–±—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    lobby_id = str(callback.message.message_id)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–∏—Ö –¥–ª—è –ª–æ–±—ñ
    # **–û–°–¨ –ö–õ–Æ–ß–û–í–ò–ô –§–Ü–ö–°:** —ñ–Ω—ñ—Ü—ñ–∞—Ç–æ—Ä –æ–¥—Ä–∞–∑—É –¥–æ–¥–∞—î—Ç—å—Å—è –¥–æ –≥—Ä–∞–≤—Ü—ñ–≤
    lobby_data = {
        "leader_id": user.id,
        "leader_name": user.first_name,
        "players": {
            user.id: {
                "name": user.first_name,
                "role": selected_role
            }
        },
        "chat_id": callback.message.chat.id
    }
    
    active_lobbies[lobby_id] = lobby_data
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–µ –ª–æ–±—ñ {lobby_id} —ñ–Ω—ñ—Ü—ñ–∞—Ç–æ—Ä–æ–º {user.first_name} (ID: {user.id}) –∑ —Ä–æ–ª–ª—é {selected_role}")

    # –ì–µ–Ω–µ—Ä—É—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    message_text = get_lobby_message_text(lobby_data)
    keyboard = create_dynamic_lobby_keyboard(lobby_id, user.id, lobby_data)
    
    await callback.message.edit_text(message_text, reply_markup=keyboard, parse_mode="HTML")
    await callback.answer(f"–í–∏ –∑–∞–π–Ω—è–ª–∏ —Ä–æ–ª—å: {selected_role}")
    await state.clear()

def register_party_handlers(dp: Dispatcher):
    """–†–µ—î—Å—Ç—Ä—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –ø–∞—Ç—ñ."""
    dp.include_router(party_router)
    logger.info("–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞—Ç—ñ (FSM) —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ.")
