"""
–ú–æ–¥—É–ª—å –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
–°—Ç–≤–æ—Ä—é—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ–¥–µ–ª–µ–π SQLAlchemy
—Ç–∞ –∑–∞–±–µ–∑–ø–µ—á—É—î –º'—è–∫—ñ –º—ñ–≥—Ä–∞—Ü—ñ—ó –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –∫–æ–ª–æ–Ω–æ–∫.
"""
import asyncio

from sqlalchemy.ext.asyncio import create_async_engine
from sqlalchemy import text
from config import ASYNC_DATABASE_URL, logger
from database.models import Base


async def init_db() -> None:
    """
    –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –±–∞–∑—É –¥–∞–Ω–∏—Ö: —Å—Ç–≤–æ—Ä—é—î —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –¥–æ–¥–∞—î –Ω–æ–≤—ñ –∫–æ–ª–æ–Ω–∫–∏ –π —ñ–Ω–¥–µ–∫—Å–∏,
    —è–∫—â–æ –≤–æ–Ω–∏ —â–µ –Ω–µ —ñ—Å–Ω—É—é—Ç—å, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏.
    """
    engine = create_async_engine(ASYNC_DATABASE_URL)
    async with engine.begin() as conn:
        logger.info("Initializing database tables (including user_settings)...")
        # Base.metadata.create_all –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–Ω–∞–π–¥–µ –≤—Å—ñ —É—Å–ø–∞–¥–∫–æ–≤–∞–Ω—ñ –∫–ª–∞—Å–∏,
        # –≤–∫–ª—é—á–∞—é—á–∏ User —Ç–∞ –Ω–æ–≤—É UserSettings.
        await conn.run_sync(Base.metadata.create_all)
        logger.info("Database tables initialized successfully.")

        try:
            logger.info("Applying soft migrations for 'users' table...")
            
            # --- üöÄ MIGRATION: Parallel execution with TaskGroup ---
            async with asyncio.TaskGroup() as tg:
                # –°–ø–∏—Å–æ–∫ —É—Å—ñ—Ö ALTER TABLE –∑–∞–ø–∏—Ç—ñ–≤
                alter_queries = [
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS chat_history JSON",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS likes_received INTEGER",
                    # ... (—Ä–µ—à—Ç–∞ –º—ñ–≥—Ä–∞—Ü—ñ–π –¥–ª—è 'users' –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω) ...
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS location TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS squad_name TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS stats_filter_type TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS mvp_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS legendary_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS maniac_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS double_kill_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS most_kills_in_one_game INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS longest_win_streak INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS highest_dmg_per_min INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS highest_gold_per_min INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS savage_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS triple_kill_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS mvp_loss_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS most_assists_in_one_game INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS first_blood_count INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS highest_dmg_taken_per_min INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS kda_ratio FLOAT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS teamfight_participation_rate FLOAT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS avg_gold_per_min INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS avg_hero_dmg_per_min INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS avg_deaths_per_match FLOAT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS avg_turret_dmg_per_match INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero1_name TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero1_matches INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero1_win_rate FLOAT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero2_name TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero2_matches INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero2_win_rate FLOAT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero3_name TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero3_matches INTEGER",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS hero3_win_rate FLOAT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS basic_profile_file_id TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS basic_profile_permanent_url TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS stats_photo_file_id TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS stats_photo_permanent_url TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS heroes_photo_file_id TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS heroes_photo_permanent_url TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS avatar_file_id TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS avatar_permanent_url TEXT",
                    "ALTER TABLE users ADD COLUMN IF NOT EXISTS is_muted BOOLEAN DEFAULT false",
                    "CREATE UNIQUE INDEX IF NOT EXISTS uq_users_player_id ON users (player_id)",
                ]
                
                # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É
                for query in alter_queries:
                    tg.create_task(conn.execute(text(query)))
            
            logger.info("Soft migrations completed successfully.")
        except* Exception as eg:
            for e in eg.exceptions:
                logger.error(f"Soft migration failed: {e}", exc_info=e)

    await engine.dispose()
