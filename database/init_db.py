"""
–ú–æ–¥—É–ª—å –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
–°—Ç–≤–æ—Ä—é—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ–¥–µ–ª–µ–π SQLAlchemy.
"""
from sqlalchemy.ext.asyncio import create_async_engine
from sqlalchemy import text
from config import ASYNC_DATABASE_URL, logger
from database.models import Base

async def init_db():
    """
    –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –±–∞–∑—É –¥–∞–Ω–∏—Ö, —Å—Ç–≤–æ—Ä—é—é—á–∏ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—á–∏/–¥–æ–¥–∞—é—á–∏ –Ω–æ–≤—ñ –∫–æ–ª–æ–Ω–∫–∏ —Ç–∞ —ñ–Ω–¥–µ–∫—Å–∏.
    """
    engine = create_async_engine(ASYNC_DATABASE_URL)
    async with engine.begin() as conn:
        logger.info("Initializing database tables...")
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ, –≤–∏–∑–Ω–∞—á–µ–Ω—ñ –≤ Base.metadata (—è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ —ñ—Å–Ω—É—é—Ç—å)
        await conn.run_sync(Base.metadata.create_all)
        logger.info("Database tables initialized successfully (if they did not exist).")

        # --- üß† –ë–ª–æ–∫ "–º'—è–∫–æ—ó" –º—ñ–≥—Ä–∞—Ü—ñ—ó ---
        try:
            # 1. –î–æ–¥–∞–≤–∞–Ω–Ω—è chat_history
            logger.info("Ensuring 'chat_history' column exists...")
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS chat_history JSON"
            ))

            # 2. –ù–æ–≤—ñ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ—ñ–ª—é
            logger.info("Ensuring profile image columns exist...")
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS basic_profile_file_id TEXT"
            ))
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS basic_profile_permanent_url TEXT"
            ))
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS stats_photo_file_id TEXT"
            ))
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS stats_photo_permanent_url TEXT"
            ))
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS heroes_photo_file_id TEXT"
            ))
            await conn.execute(text(
                "ALTER TABLE users ADD COLUMN IF NOT EXISTS heroes_photo_permanent_url TEXT"
            ))

            # 3. –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –¥–ª—è player_id
            logger.info("Ensuring unique index on 'player_id' exists...")
            await conn.execute(text(
                "CREATE UNIQUE INDEX IF NOT EXISTS uq_users_player_id ON users (player_id)"
            ))

            logger.info("Soft migration completed successfully.")
        except Exception as e:
            # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É, –∞–ª–µ –Ω–µ –∑—É–ø–∏–Ω—è—î–º–æ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.
            logger.error(f"Soft migration step failed: {e}", exc_info=True)

    await engine.dispose()
