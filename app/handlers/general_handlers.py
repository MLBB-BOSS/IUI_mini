import logging
import os
from aiogram import Router, Bot
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ErrorEvent, User
from aiogram.utils.markdown import hbold, hcode, hitalic
from aiogram.exceptions import TelegramAPIError

from app.keyboards.reply_keyboards import get_main_kb

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞ —Ç–∞ —Ä–æ—É—Ç–µ—Ä–∞
logger = logging.getLogger(__name__)
general_router = Router()
ADMIN_USER_ID = os.getenv("ADMIN_USER_ID")

@general_router.message(CommandStart())
async def cmd_start(message: Message):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start. –í—ñ—Ç–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –ø—Ä–æ–ø–æ–Ω—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
    """
    user = message.from_user
    welcome_message = (
        f"–ü—Ä–∏–≤—ñ—Ç, {hbold(user.full_name)}! üëã\n\n"
        f"–Ø ‚Äî ü§ñ {hbold('MLBB IUI mini')}, –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ Mobile Legends: Bang Bang.\n\n"
        "–Ø –º–æ–∂—É –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –º–∞—Ç—á—ñ–≤, –Ω–∞–¥–∞–≤–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞ –ø–æ—Ä–∞–¥–∏. "
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç, —ñ —è –∑—Ä–æ–±–ª—é –≤—Å–µ —ñ–Ω—à–µ!\n\n"
        "–î–ª—è –ø–æ—á–∞—Ç–∫—É, —Å–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /go."
    )
    await message.answer(welcome_message, reply_markup=get_main_kb())

@general_router.message(Command("go"))
async def cmd_go(message: Message):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /go. –Ü–Ω—Å—Ç—Ä—É–∫—Ç—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç.
    """
    await message.answer("üöÄ –ö–æ–º–∞–Ω–¥–∞ /go –æ—Ç—Ä–∏–º–∞–Ω–∞! –ù–∞–¥—Å–∏–ª–∞–π—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.")


async def general_error_handler(event: ErrorEvent, bot: Bot):
    """
    –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –≤—Å—ñ—Ö –Ω–µ–ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–∏—Ö –≤–∏–Ω—è—Ç–∫—ñ–≤.

    –¶–µ–π –æ–±—Ä–æ–±–Ω–∏–∫ —Ä–µ—î—Å—Ç—Ä—É—î—Ç—å—Å—è –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –¥–∏—Å–ø–µ—Ç—á–µ—Ä—ñ. –í—ñ–Ω –ª–æ–≥—É—î –ø–æ–º–∏–ª–∫—É
    —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –¥–µ—Ç–∞–ª—å–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É, —è–∫—â–æ –π–æ–≥–æ ID –∑–∞–¥–∞–Ω–æ.
    """
    logger.error(f"–ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {event.exception}", exc_info=True)

    if not ADMIN_USER_ID:
        logger.warning("ADMIN_USER_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –Ω–µ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.")
        return

    # –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–∏–π —Å–ø—Ä–∏—á–∏–Ω–∏–≤ –ø–æ–º–∏–ª–∫—É
    user: User | None = None
    if event.update.message:
        user = event.update.message.from_user
    elif event.update.callback_query:
        user = event.update.callback_query.from_user

    user_info = "N/A"
    if user:
        user_info = f"{user.full_name} (@{user.username}, ID: {user.id})"

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    update_details = event.update.model_dump_json(indent=2, exclude_none=True)
    error_message_to_admin = [
        "üö® <b>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ —É –±–æ—Ç—ñ!</b> üö®",
        "",
        f"üë§ <b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</b> {hitalic(user_info)}",
        f"üìù <b>–í–∏–∫–ª—é—á–µ–Ω–Ω—è:</b>",
        hcode(f"{type(event.exception).__name__}: {event.exception}"),
        "",
        "üóÇ <b>–î–µ—Ç–∞–ª—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (Update):</b>",
        hcode(update_details)
    ]

    try:
        await bot.send_message(
            chat_id=ADMIN_USER_ID,
            text="\n".join(error_message_to_admin)
        )
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ —Å–∞–º–æ–º—É –æ–±—Ä–æ–±–Ω–∏–∫—É –ø–æ–º–∏–ª–æ–∫ –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–≤—ñ—Ç—É –∞–¥–º—ñ–Ω—É: {e}", exc_info=True)
